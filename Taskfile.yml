version: '3'

env:
  TESTKUBE_NS: testkube
  TEST_IMAGE: ghcr.io/beingadityak/dns-test-executor:latest
  CLUSTER_NAME: testkube-cluster

tasks:
  setup:kind:
    desc: Create a KinD cluster
    cmds:
      - kind create cluster --name {{.CLUSTER_NAME}} --config kind-config.yaml

  setup:helm:
    desc: Install Helm and Testkube in the cluster
    cmds:
      - helm repo add kubeshop https://kubeshop.github.io/helm-charts ; helm repo update && helm upgrade --install --create-namespace {{.TESTKUBE_NS}} kubeshop/testkube --set testkube-api.cloud.key=TESTKEY --set testkube-api.cloud.orgId=TESTORG --set testkube-api.cloud.envId=TESTID --set testkube-api.minio.enabled=false --set mongodb.enabled=false --set testkube-dashboard.enabled=false --set testkube-api.cloud.url=agent.testkube.io:443 --namespace testkube

  install:cli:
    desc: Install the Testkube CLI
    cmds:
      - curl -sSLf https://get.testkube.io | bash

  build:test-image:
    desc: Build local test image for TestContainers tests
    cmds:
      - docker build -t {{.TEST_IMAGE}} -f Dockerfile.testkube .

  load:image:
    desc: Load local image into KinD
    cmds:
      - kind load docker-image {{.TEST_IMAGE}} --name {{.CLUSTER_NAME}}

  create:test:
    desc: Apply Testkube Test CR from YAML manifest
    cmds:
      - kubectl apply -f testkube-workflow.yaml

  run:test:
    desc: Run the test in Testkube
    cmds:
      - tk run testworkflow dns-parser-e2e --watch --namespace {{.TESTKUBE_NS}}

  clean:
    desc: Clean KinD cluster
    cmds:
      - kind delete cluster --name {{.CLUSTER_NAME}}

  setup:
    desc: Install dependencies
    cmds:
      - task: install:cli
  
  tests:
    desc: Run the full tests
    cmds:
      - task: setup:kind
      - task: setup:helm
      - task: build:test-image
      - task: load:image
      - task: create:test
      - task: run:test
